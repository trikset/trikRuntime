<config>
	<!-- Initialization sh script, will be executed on creation of Brick object. -->
	<initScript>
		echo 1 > /sys/class/gpio/gpio62/value

		i2cset -y 2 0x48 0x10 0x1000 w
		i2cset -y 2 0x48 0x11 0x1000 w
		i2cset -y 2 0x48 0x12 0x1000 w
		i2cset -y 2 0x48 0x13 0x1000 w

		echo 1 > /sys/class/pwm/ehrpwm.1:1/request
		echo 1 > /sys/class/pwm/ehrpwm.1:1/run

		echo 1 > /sys/class/pwm/ehrpwm.1:0/request
		echo 1 > /sys/class/pwm/ehrpwm.1:0/run

		echo 1 > /sys/class/pwm/ehrpwm.0:1/request
		echo 1 > /sys/class/pwm/ehrpwm.0:1/run

		cat /sys/class/pwm/ecap_cap.0/config > /dev/null

		cat /sys/class/pwm/ecap_cap.1/config > /dev/null

		cat /sys/class/pwm/ecap_cap.2/config > /dev/null

		echo 1 > /sys/devices/virtual/input/input1/enable_device

		amixer -q set PCM 127
	</initScript>
	
	<!-- Servomotors configuration, maps logical port to device file, file for setting period,
	     initial period value and type of motor on that port.
	     Motor type parameters like calibration curve are described separately, in "motorTypes" section. -->
	<servoMotors>
		<servoMotor
			port="JE1"
			deviceFile="/sys/class/pwm/ehrpwm.1:1/duty_ns"
			periodFile="/sys/class/pwm/ehrpwm.1:1/period_ns"
			period="20000000"
			defaultType="defaultServo"
			invert="false"
		/>
		<servoMotor
			port="JE2"
			deviceFile="/sys/class/pwm/ehrpwm.1:0/duty_ns"
			periodFile="/sys/class/pwm/ehrpwm.1:0/period_ns"
			period="20000000"
			defaultType="defaultServo"
			invert="false"
		/>
		<servoMotor
			port="JE4"
			deviceFile="/sys/class/pwm/ehrpwm.0:1/duty_ns"
			periodFile="/sys/class/pwm/ehrpwm.0:1/period_ns"
			period="20000000"
			defaultType="defaultServo"
			invert="false"
		/>
	</servoMotors>

	<pwmCaptures>
		<capture
			port="JC1"
			frequencyFile="/sys/class/pwm/ecap_cap.0/freq"
			dutyFile="/sys/class/pwm/ecap_cap.0/duty_percentage"
		/>
		<capture
			port="JC2"
			frequencyFile="/sys/class/pwm/ecap_cap.1/freq"
			dutyFile="/sys/class/pwm/ecap_cap.1/duty_percentage"
		/>
		<capture
			port="JC3"
			frequencyFile="/sys/class/pwm/ecap_cap.2/freq"
			dutyFile="/sys/class/pwm/ecap_cap.2/duty_percentage"
		/>
	</pwmCaptures>

	<!-- Power motors configuration, maps logical port to I2C command. 
	     I2C device path and device id are set separately, in "i2c" section. 
	     Power motors do not have a type, because their driver is controlled by high-level 
	     commands and handles motor specifics by itself. -->
	<powerMotors>
		<powerMotor port="JM1" i2cCommandNumber="0x14" invert="false" />
		<powerMotor port="JM2" i2cCommandNumber="0x15" invert="false" />
		<powerMotor port="M1" i2cCommandNumber="0x16" invert="false" />
		<powerMotor port="JM3" i2cCommandNumber="0x17" invert="false" />
	</powerMotors>

	<!-- Aanalog sensors configuration, maps logical port to I2C command. 
	     I2C device path and device id are set separately, in "i2c" section. 
	     Analog sensors do not have a type, because their driver is controlled by high-level 
	     commands and handles sensor specifics by itself. -->
	<analogSensors>
		<analogSensor port="JA1" i2cCommandNumber="0x25" />
		<analogSensor port="JA2" i2cCommandNumber="0x24" />
		<analogSensor port="JA3" i2cCommandNumber="0x23" />
		<analogSensor port="JA4" i2cCommandNumber="0x22" />
		<analogSensor port="JA5" i2cCommandNumber="0x21" />
		<analogSensor port="JA6" i2cCommandNumber="0x20" />
	</analogSensors>

	<!-- Encoders configuration, maps logical port to I2C command. 
	     I2C device path and device id are set separately, in "i2c" section. -->
	<encoders>
		<encoder port="JB2" i2cCommandNumber="0x31" />
		<encoder port="JB4" i2cCommandNumber="0x32" />
		<encoder port="JB3" i2cCommandNumber="0x33" />
	</encoders>
	
	<!-- Description of servo motor types used in servo motors mapping. Supplied values correspond to 
	     full reverse (for "min" parameter), full forward ("max" parameter),
	     non-breaking stop ("zero" parameter), breaking stop ("stop" parameter). -->
	<servoMotorTypes>
		<defaultServo min="1200000" max="1800000" zero="1450000" stop="0" />
	</servoMotorTypes>

	<!-- Digital sensors configuration, maps logical port to digital sensor device file and digital sensor type used by default 
	     (if not configured programmatically). -->
	<digitalSensors>
		<digitalSensor port="JD1" deviceFile="/sys/devices/platform/da850_trik/sensor_d1" defaultType="lightSensor" />
		<digitalSensor port="JD2" deviceFile="/sys/devices/platform/da850_trik/sensor_d2" defaultType="lightSensor" />
		<accelerometer min="-32767" max="32767" deviceFile="/dev/input/by-path/platform-i2c_davinci.1-event" />
		<gyroscope min="-32767" max="32767" deviceFile="/dev/input/by-path/platform-spi_davinci.1-event" />
	</digitalSensors>
	
	<!-- Description of sensor types used in digital sensor mappings. Provides minimal reading value 
	     (which will be 0 in client program) and maximal reading value (which will be 100). -->
	<digitalSensorTypes>
		<lightSensor min="30000" max="350000" />
	</digitalSensorTypes>
	
	<!-- Format for playSound command, used to play .wav files. %1 designates file name to be played. -->
	<playWavFile command="aplay --quiet &quot;%1&quot; &amp;" />
	
	<!-- Format for playSound command, used to play .mp3 files. %1 designates file name to be played. -->
	<playMp3File command="cvlc --quiet &quot;%1&quot; &amp;" />
	
	<!-- Device files and on/off values for LED on a brick. -->
	<led green="/sys/class/leds/led_green/brightness" red="/sys/class/leds/led_red/brightness" on="0" off="1" />

	<!--Device file for keys on a brick -->
	<keys deviceFile="/dev/input/event0" />
	
	<!-- I2C device for communication with power motor drivers. Parameters are path to device file and device id. -->
	<i2c path="/dev/i2c-2" deviceId="0x48" />
	
</config>
