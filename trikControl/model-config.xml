<!--
Configuration file for a model. Meant to be edited automatically via TRIKStudio or TRIKGui and can be different
for each model. File below is an example of possible configuration.

Devices have properties depending on a port to which device is plugged and device class (IR Sensor, Servomotor
and so on), such as device file, and properties common for some devices of given class regardless of port (for example,
we may have two different types of angular servos that have common control interface but different parameters).
So we distinguish "device class" and "device type". "device class" is a class of device as in underlying C++ code
(basically, a logic of communication with particular kind of device), "device type" is a set of parameters for
each device class. Device class can have many device types associated with it (for instance, for different kinds of
servomotors from example above). Device classes are hard-coded, device types are defined in system config. Every
parameter for device type may be overridden here, in model config, to allow to fine-tune devices for particular purpose
(ability to set the maximum and minimum angles of angular servo proven to be especially useful).

Model config maps ports to device types and allows to override default parameters defined in a type. Every port or
device type for a port may be omitted, it means that no device is configured on that port and it not be available from
scripts or GUI (will return null reference to scripts).

Note that device, even if listed here, may fail by itself, then it also will not be available.
-->

<config>
	<!-- Initialization sh script, will be executed when runtime is launched, but after system initialization script. -->
	<initScript>
	</initScript>

	<!-- Servomotor or PWM capture ports. -->
	<E1>
		<angularServomotor />
	</E1>
	<E2>
		<angularServomotor invert="false" />
	</E2>
	<E3>
		<angularServomotor min="600000" max="2200000" zero="1400000" stop="0" invert="false" />
	</E3>
	<C1>
		<angularServomotor />
	</C1>
	<C2>
		<angularServomotor />
	</C2>
	<C3>
		<angularServomotor />
	</C3>

	<!-- Analog sensor ports. -->
	<A1>
		<sharpGP2Sensor />
	</A1>
	<A2>
		<sharpGP2Sensor />
	</A2>
	<A3>
		<sharpGP2Sensor />
	</A3>
	<A4>
		<analogSensor />
	</A4>
	<A5>
		<analogSensor />
	</A5>
	<A6>
		<analogSensor />
	</A6>

	<!-- Digital sensor ports. -->
	<D1>
		<rangeSensor />
	</D1>
	<D2>
		<rangeSensor />
	</D2>
	<!--
	<F1>
		<volumeSensor />
	</F1>
	-->

	<!-- Encoder ports. -->
	<B1>
		<encoder95 />
	</B1>
	<B2>
		<encoder95 />
	</B2>
	<B3>
		<encoder126 />
	</B3>
	<B4>
		<encoder95 />
	</B4>

	<!-- Power motor ports. -->
	<M1>
		<powerMotor />
	</M1>
	<M2>
		<powerMotor invert="true" />
	</M2>
	<M3>
		<powerMotor />
	</M3>
	<M4>
		<powerMotor />
	</M4>

	<!-- Video sensor ports. -->
	<video0>
		<lineSensor />
	</video0>

	<video1>
		<colorSensor3x3 />
	</video1>

	<!-- On-board sensors. -->
	<!-- If model is not using those, they can be turned off to save system resources, by deleting them or
		 commenting them out. -->
	<accelerometer />
	<gyroscope />

	<!-- Optional modules -->
	<gamepad />
	<mailbox />

	<!-- Example of custom FIFO sensor -->
<!--	<soundSensor>
		<fifo />
	</soundSensor>-->
</config>
